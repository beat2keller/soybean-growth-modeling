df <- groupedData(value ~ time_since_sowing | plot_grouped_global, data = df)
# list object for later modelling
fm1Soy.lis <- nlsList( value ~ SSlogis(time_since_sowing, Asym, xmid, scal), data = df, control=list(lower=c(0.0,0.0,0.0,0),maxiter=1000))
# remove outliers suggested by last year. Needed for convergence
fm1Soy.table <- as.data.frame(summary(fm1Soy.lis)$coef)
fm1Soy.table <- setDT(fm1Soy.table)
fm1Soy.table$plot_grouped_global <-1:nrow(fm1Soy.table)
outlier_plots1 <- fm1Soy.table$plot_grouped_global[(fm1Soy.table$Estimate.Asym>4)]
outlier_plots2 <- fm1Soy.table$plot_grouped_global[(fm1Soy.table$Estimate.xmid>100)]
outlier_plots3 <- fm1Soy.table$plot_grouped_global[(fm1Soy.table$Estimate.scal>20)]
outlier_plots4 <- fm1Soy.table$plot_grouped_global[is.na(fm1Soy.table$Estimate.scal)]
outlier_plots <- c(outlier_plots1,outlier_plots2, outlier_plots3, outlier_plots4)
outlier_plots <- outlier_plots[!is.na(outlier_plots)]
df <- subset(df, !plot_grouped_global %in%outlier_plots)
setDT(df)[,length(genotype.id[!duplicated(genotype.id)])]
setDT(df)[,N:=nrow(.SD),by=genotype.id]
df <- subset(df, N>10)
df <- droplevels(df)
setDT(df)[,length(genotype.id[!duplicated(genotype.id)])]
df <- as.data.frame(df)
# repeat process
df <- groupedData(value ~ time_since_sowing | plot_grouped_global, data = df)
fm1Soy.lis <- nlsList( value ~ SSlogis(time_since_sowing, Asym, xmid, scal), data = df, control=list(lower=c(0.0,0.0,0.0,0),maxiter=1000))
# set controls s.t. method converges
nlmeControl(msMaxIter = 5000, msVerbose = TRUE)
#update as nlme model with random effects only on Scal
cc_rf_scal <- nlme( fm1Soy.lis , random = Asym +scal~ 1, weights = varPower())
# vectors for starting values
soyFix <- fixef(cc_rf_scal)
no_genotypes = length(levels(df$genotype.id))
dynamic_Asym = c(soyFix[1])
dynamic_xmid = c(soyFix[2], rep(0,2))
dynamic_scal <- c(soyFix[3], rep(0,3*no_genotypes-1))
dynamic_vector <- append(dynamic_Asym, c(dynamic_xmid, dynamic_scal))
#final model, takes a while 20 min +
start_time <- Sys.time()
cc_rf_scal_14 <- update(cc_rf_scal,
fixed = list(Asym ~ 1,
xmid ~ avg_Temperature_14 + avg_precipitation_14 ,
scal ~  genotype.id*(avg_precipitation_14 + avg_radiation_14)),
start = dynamic_vector, control = list (msVerbose = TRUE,
maxIter = 100,
msMaxIter = 100))
# this file fits the model
# Packages
library(nlme)
library(stringr)
library(ggplot2)
library(dplyr)
library(broom.mixed)
library(merTools)
library(data.table)
# data "plot_grouped_global" is used for the grouping of the data
df = read.csv("data/model_data.csv")
hist(df$year)
########model for either subset###############
df = subset(df,  year %in% c(2020, 2021, 2022))
# this file fits the model
# Packages
library(nlme)
library(stringr)
library(ggplot2)
library(dplyr)
library(broom.mixed)
library(merTools)
library(data.table)
# data "plot_grouped_global" is used for the grouping of the data
df = read.csv("data/model_data.csv")
########model for either subset###############
df = subset(df,  year %in% c(2020, 2021, 2022))
##################################################
# restore factor variables lost due to saving
df$genotype.id   <- as.factor(df$genotype.id)
df$plot_grouped_global   <- ordered(as.factor(df$plot_grouped_global))
#prepear grouping
df <- as.data.frame(df)
df <- droplevels(df)
df$Filename <- NULL
#transform outcome
df$value        <- asin(sqrt(df$value))
# grouped DF
df <- groupedData(value ~ time_since_sowing | plot_grouped_global, data = df)
# list object for later modelling
fm1Soy.lis <- nlsList( value ~ SSlogis(time_since_sowing, Asym, xmid, scal), data = df, control=list(lower=c(0.0,0.0,0.0,0),maxiter=1000))
# remove outliers suggested by last year. Needed for convergence
fm1Soy.table <- as.data.frame(summary(fm1Soy.lis)$coef)
fm1Soy.table <- setDT(fm1Soy.table)
fm1Soy.table$plot_grouped_global <-1:nrow(fm1Soy.table)
outlier_plots1 <- fm1Soy.table$plot_grouped_global[(fm1Soy.table$Estimate.Asym>4)]
outlier_plots2 <- fm1Soy.table$plot_grouped_global[(fm1Soy.table$Estimate.xmid>100)]
outlier_plots3 <- fm1Soy.table$plot_grouped_global[(fm1Soy.table$Estimate.scal>20)]
outlier_plots4 <- fm1Soy.table$plot_grouped_global[is.na(fm1Soy.table$Estimate.scal)]
outlier_plots <- c(outlier_plots1,outlier_plots2, outlier_plots3, outlier_plots4)
outlier_plots <- outlier_plots[!is.na(outlier_plots)]
df <- subset(df, !plot_grouped_global %in%outlier_plots)
setDT(df)[,length(genotype.id[!duplicated(genotype.id)])]
setDT(df)[,N:=nrow(.SD),by=genotype.id]
df <- subset(df, N>10)
df <- droplevels(df)
setDT(df)[,length(genotype.id[!duplicated(genotype.id)])]
df <- as.data.frame(df)
# repeat process
df <- groupedData(value ~ time_since_sowing | plot_grouped_global, data = df)
fm1Soy.lis <- nlsList( value ~ SSlogis(time_since_sowing, Asym, xmid, scal), data = df, control=list(lower=c(0.0,0.0,0.0,0),maxiter=1000))
# set controls s.t. method converges
nlmeControl(msMaxIter = 5000, msVerbose = TRUE)
#update as nlme model with random effects only on Scal
cc_rf_scal <- nlme( fm1Soy.lis , random = Asym +scal~ 1, weights = varPower())
# vectors for starting values
soyFix <- fixef(cc_rf_scal)
no_genotypes = length(levels(df$genotype.id))
dynamic_Asym = c(soyFix[1])
dynamic_xmid = c(soyFix[2], rep(0,2))
dynamic_scal <- c(soyFix[3], rep(0,3*no_genotypes-1))
dynamic_vector <- append(dynamic_Asym, c(dynamic_xmid, dynamic_scal))
#final model, takes a while 20 min +
start_time <- Sys.time()
cc_rf_scal_14 <- update(cc_rf_scal,
fixed = list(Asym ~ 1,
xmid ~ avg_Temperature_14 + avg_precipitation_14 ,
scal ~  genotype.id*(avg_precipitation_14 + avg_radiation_14)),
start = dynamic_vector, control = list (msVerbose = TRUE,
maxIter = 100,
msMaxIter = 100))
# this file fits the model
# Packages
library(nlme)
library(stringr)
library(ggplot2)
library(dplyr)
library(broom.mixed)
library(merTools)
library(data.table)
# data "plot_grouped_global" is used for the grouping of the data
df = read.csv("data/model_data.csv")
########model for either subset###############
df = subset(df,  year %in% c(2019, 2021, 2022))
##################################################
# restore factor variables lost due to saving
df$genotype.id   <- as.factor(df$genotype.id)
df$plot_grouped_global   <- ordered(as.factor(df$plot_grouped_global))
#prepear grouping
df <- as.data.frame(df)
df <- droplevels(df)
df$Filename <- NULL
#transform outcome
df$value        <- asin(sqrt(df$value))
# grouped DF
df <- groupedData(value ~ time_since_sowing | plot_grouped_global, data = df)
# list object for later modelling
fm1Soy.lis <- nlsList( value ~ SSlogis(time_since_sowing, Asym, xmid, scal), data = df, control=list(lower=c(0.0,0.0,0.0,0),maxiter=1000))
# remove outliers suggested by last year. Needed for convergence
fm1Soy.table <- as.data.frame(summary(fm1Soy.lis)$coef)
fm1Soy.table <- setDT(fm1Soy.table)
fm1Soy.table$plot_grouped_global <-1:nrow(fm1Soy.table)
outlier_plots1 <- fm1Soy.table$plot_grouped_global[(fm1Soy.table$Estimate.Asym>4)]
outlier_plots2 <- fm1Soy.table$plot_grouped_global[(fm1Soy.table$Estimate.xmid>100)]
outlier_plots3 <- fm1Soy.table$plot_grouped_global[(fm1Soy.table$Estimate.scal>20)]
outlier_plots4 <- fm1Soy.table$plot_grouped_global[is.na(fm1Soy.table$Estimate.scal)]
outlier_plots <- c(outlier_plots1,outlier_plots2, outlier_plots3, outlier_plots4)
outlier_plots <- outlier_plots[!is.na(outlier_plots)]
df <- subset(df, !plot_grouped_global %in%outlier_plots)
setDT(df)[,length(genotype.id[!duplicated(genotype.id)])]
setDT(df)[,N:=nrow(.SD),by=genotype.id]
df <- subset(df, N>10)
df <- droplevels(df)
setDT(df)[,length(genotype.id[!duplicated(genotype.id)])]
df <- as.data.frame(df)
# repeat process
df <- groupedData(value ~ time_since_sowing | plot_grouped_global, data = df)
fm1Soy.lis <- nlsList( value ~ SSlogis(time_since_sowing, Asym, xmid, scal), data = df, control=list(lower=c(0.0,0.0,0.0,0),maxiter=1000))
# set controls s.t. method converges
nlmeControl(msMaxIter = 5000, msVerbose = TRUE)
#update as nlme model with random effects only on Scal
cc_rf_scal <- nlme( fm1Soy.lis , random = Asym +scal~ 1, weights = varPower())
# vectors for starting values
soyFix <- fixef(cc_rf_scal)
no_genotypes = length(levels(df$genotype.id))
dynamic_Asym = c(soyFix[1])
dynamic_xmid = c(soyFix[2], rep(0,2))
dynamic_scal <- c(soyFix[3], rep(0,3*no_genotypes-1))
dynamic_vector <- append(dynamic_Asym, c(dynamic_xmid, dynamic_scal))
#final model, takes a while 20 min +
start_time <- Sys.time()
cc_rf_scal_14 <- update(cc_rf_scal,
fixed = list(Asym ~ 1,
xmid ~ avg_Temperature_14 + avg_precipitation_14 ,
scal ~  genotype.id*(avg_precipitation_14 + avg_radiation_14)),
start = dynamic_vector, control = list (msVerbose = TRUE,
maxIter = 100,
msMaxIter = 100))
end_time <- Sys.time()
print(end_time-start_time)
save(cc_rf_scal_14, file=paste0("Asym_scal_14_xmid2_scal2_2019_2022.RData"))
load("~/Coding_eth/canopy-cover-stats-lab/Asym_scal_14_xmid2_scal2.RData")
load(file = "Asym_scal_14_xmid2_scal2.RData")
plot(cc_rf_scal_14)
plot(cc_rf_scal_14)
plot(cc_rf_scal_14, 2)
plot(cc_rf_scal_14, distance ~ fitted(.) | Subject, abline = c(0,1))
plot(cc_rf_scal_14)
plot(cc_rf_scal_14)
plot(cc_rf_scal_14)
data =read.csv("data/model_data.csv")
View(data)
p_data = subset(data, genotype.id = 10056 )
p_data = subset(data, genotype.id ==10056 )
names(p_data)
plot(value~time_since_sowing, type = "p")
plot(data$value~data$time_since_sowing, type = "p")
p_data = subset(data, year_site.UID ==DSSB001 )
p_data = subset(data, year_site.UID =="DSSB001" )
p_data = subset(data, UID =="DSSB0010001" )
plot(data$value~data$time_since_sowing, type = "p")
plot(data$value~data$time_since_sowing, type = "p")
plot(p_data$value~p_data$time_since_sowing, type = "p")
p_data = subset(data, genotype.id == 10001 )
plot(p_data$value~p_data$time_since_sowing, type = "p")
fit_val = cc_rf_scal_14$fitted
fit_val
View(fit_val)
predict(cc_rf_scal_14, p_data)
p_data
p_data$genotype.id = as.factor(p_data$genotype.id)
predict(cc_rf_scal_14, p_data)
points(p_data$time_since_sowing, predict(cc_rf_scal_14, p_data), col = "red")
p_data = subset(data, genotype.id == 10001 & UID == "DSSB003")
p_data = subset(data, genotype.id == 10001 & year_site.UID == "DSSB003")
p_data$genotype.id = as.factor(p_data$genotype.id)
plot(p_data$value~p_data$time_since_sowing, type = "p")
fit_val = cc_rf_scal_14$fitted
points(p_data$time_since_sowing, predict(cc_rf_scal_14, p_data), col = "red")
p_data = subset(data, genotype.id == 10002 & year_site.UID == "DSSB003")
p_data = subset(data, genotype.id == 10003 & year_site.UID == "DSSB003")
p_data$genotype.id = as.factor(p_data$genotype.id)
plot(p_data$value~p_data$time_since_sowing, type = "p")
fit_val = cc_rf_scal_14$fitted
points(p_data$time_since_sowing, predict(cc_rf_scal_14, p_data, ), col = "red")
p_data = subset(data, genotype.id == 10016 & year_site.UID == "DSSB004")
p_data$genotype.id = as.factor(p_data$genotype.id)
plot(p_data$value~p_data$time_since_sowing, type = "p")
fit_val = cc_rf_scal_14$fitted
points(p_data$time_since_sowing, predict(cc_rf_scal_14, p_data, ), col = "red")
points(p_data$time_since_sowing, predict(cc_rf_scal_14, p_data ), col = "red")
points(p_data$time_since_sowing, predict(cc_rf_scal_14, p_data level = 0 ), col = "red")
points(p_data$time_since_sowing, predict(cc_rf_scal_14, p_data, level = 0 ), col = "red")
points(p_data$time_since_sowing, predict(cc_rf_scal_14, p_data, level = 1), col = "red")
plot(p_data$value~p_data$time_since_sowing, type = "p")
points(p_data$time_since_sowing, predict(cc_rf_scal_14, p_data, level = 1), col = "red")
plot(p_data$value~p_data$time_since_sowing, type = "p")
points(p_data$time_since_sowing, predict(cc_rf_scal_14, p_data, level = 0), col = "red")
points(p_data$time_since_sowing, predict(cc_rf_scal_14, p_data, level = 2), col = "red")
p_data = subset(data, genotype.id == 10003 & year_site.UID == "FPSB007")
p_data$genotype.id = as.factor(p_data$genotype.id)
p_data = subset(data, genotype.id == 10003 & year_site.UID == "FPSB007")
p_data$genotype.id = as.factor(p_data$genotype.id)
plot(p_data$value~p_data$time_since_sowing, type = "p")
fit_val = cc_rf_scal_14$fitted
points(p_data$time_since_sowing, predict(cc_rf_scal_14, p_data, level =), col = "red")
points(p_data$time_since_sowing, predict(cc_rf_scal_14, p_data), col = "red")
p_data = subset(data, genotype.id == 10003)
p_data$genotype.id = as.factor(p_data$genotype.id)
plot(p_data$value~p_data$time_since_sowing, type = "p")
fit_val = cc_rf_scal_14$fitted
points(p_data$time_since_sowing, predict(cc_rf_scal_14, p_data), col = "red")
p_data = subset(data, genotype.id == 10001)
p_data$genotype.id = as.factor(p_data$genotype.id)
plot(p_data$value~p_data$time_since_sowing, type = "p")
fit_val = cc_rf_scal_14$fitted
points(p_data$time_since_sowing, predict(cc_rf_scal_14, p_data), col = "red")
p_data = subset(data, genotype.id == 10002)
p_data$genotype.id = as.factor(p_data$genotype.id)
plot(p_data$value~p_data$time_since_sowing, type = "p")
fit_val = cc_rf_scal_14$fitted
points(p_data$time_since_sowing, predict(cc_rf_scal_14, p_data), col = "red")
p_data = subset(data, genotype.id == 10010)
p_data$genotype.id = as.factor(p_data$genotype.id)
plot(p_data$value~p_data$time_since_sowing, type = "p")
fit_val = cc_rf_scal_14$fitted
points(p_data$time_since_sowing, predict(cc_rf_scal_14, p_data), col = "red")
p_data = subset(data, genotype.id == 10011)
p_data$genotype.id = as.factor(p_data$genotype.id)
plot(p_data$value~p_data$time_since_sowing, type = "p")
fit_val = cc_rf_scal_14$fitted
points(p_data$time_since_sowing, predict(cc_rf_scal_14, p_data), col = "red")
p_data = subset(data, genotype.id == 10012)
p_data$genotype.id = as.factor(p_data$genotype.id)
plot(p_data$value~p_data$time_since_sowing, type = "p")
fit_val = cc_rf_scal_14$fitted
points(p_data$time_since_sowing, predict(cc_rf_scal_14, p_data), col = "red")
p_data = subset(data, genotype.id == 10013)
p_data$genotype.id = as.factor(p_data$genotype.id)
plot(p_data$value~p_data$time_since_sowing, type = "p")
fit_val = cc_rf_scal_14$fitted
points(p_data$time_since_sowing, predict(cc_rf_scal_14, p_data), col = "red")
p_data = subset(data, genotype.id == 10013)
p_data = subset(data, genotype.id == 1003)
p_data$genotype.id = as.factor(p_data$genotype.id)
plot(p_data$value~p_data$time_since_sowing, type = "p")
fit_val = cc_rf_scal_14$fitted
p_data = subset(data, genotype.id == 10030)
p_data$genotype.id = as.factor(p_data$genotype.id)
plot(p_data$value~p_data$time_since_sowing, type = "p")
fit_val = cc_rf_scal_14$fitted
points(p_data$time_since_sowing, predict(cc_rf_scal_14, p_data), col = "red")
p_data = subset(data, genotype.id == 10015)
p_data$genotype.id = as.factor(p_data$genotype.id)
plot(p_data$value~p_data$time_since_sowing, type = "p")
fit_val = cc_rf_scal_14$fitted
points(p_data$time_since_sowing, predict(cc_rf_scal_14, p_data), col = "red")
p_data
predict(cc_rf_scal_14, p_data)
length(predict(cc_rf_scal_14, p_data))
dim(p_data)
p_data = subset(data, genotype.id == 10015)
p_data$genotype.id = as.factor(p_data$genotype.id)
plot(p_data$value~p_data$time_since_sowing, type = "p")
fit_val = cc_rf_scal_14$fitted
points(p_data$time_since_sowing, predict(cc_rf_scal_14, p_data, level = 0), col = "red")
p_data = subset(data, genotype.id == 10015)
p_data$genotype.id = as.factor(p_data$genotype.id)
plot(p_data$value~p_data$time_since_sowing, type = "p")
fit_val = cc_rf_scal_14$fitted
points(p_data$time_since_sowing, predict(cc_rf_scal_14, p_data, level = 1), col = "red")
points(p_data$time_since_sowing, predict(cc_rf_scal_14, p_data, level = 2), col = "red")
points(p_data$time_since_sowing, predict(cc_rf_scal_14, p_data, level = 0), col = "red")
p_data = subset(data, genotype.id == 10015)
p_data$genotype.id = as.factor(p_data$genotype.id)
plot(p_data$value~p_data$time_since_sowing, type = "p")
fit_val = cc_rf_scal_14$fitted
points(p_data$time_since_sowing, predict(cc_rf_scal_14, p_data, level = 0), col = "red")
plot(p_data$time_since_sowing, predict(cc_rf_scal_14, p_data, level = 0), col = "red")
p_data = subset(data, genotype.id == 10014)
p_data$genotype.id = as.factor(p_data$genotype.id)
plot(p_data$value~p_data$time_since_sowing, type = "p")
fit_val = cc_rf_scal_14$fitted
plot(p_data$time_since_sowing, predict(cc_rf_scal_14, p_data, level = 0), col = "red")
p_data = subset(data, genotype.id == 10010)
p_data$genotype.id = as.factor(p_data$genotype.id)
plot(p_data$value~p_data$time_since_sowing, type = "p")
fit_val = cc_rf_scal_14$fitted
plot(p_data$time_since_sowing, predict(cc_rf_scal_14, p_data, level = 0), col = "red")
p_data = subset(data, genotype.id == 1009)
p_data = subset(data, genotype.id == 10009)
p_data$genotype.id = as.factor(p_data$genotype.id)
plot(p_data$value~p_data$time_since_sowing, type = "p")
fit_val = cc_rf_scal_14$fitted
plot(p_data$time_since_sowing, predict(cc_rf_scal_14, p_data, level = 0), col = "red")
plot(p_data$time_since_sowing, predict(cc_rf_scal_14, p_data, level = 1), col = "red")
p_data = subset(data, genotype.id == 10001)
p_data$genotype.id = as.factor(p_data$genotype.id)
plot(p_data$value~p_data$time_since_sowing, type = "p")
fit_val = cc_rf_scal_14$fitted
plot(p_data$time_since_sowing, predict(cc_rf_scal_14, p_data, level = 1), col = "red")
plot(p_data$value~p_data$time_since_sowing, type = "p")
p_data = subset(data, genotype.id == 10002)
p_data$genotype.id = as.factor(p_data$genotype.id)
plot(p_data$value~p_data$time_since_sowing, type = "p")
fit_val = cc_rf_scal_14$fitted
plot(p_data$time_since_sowing, predict(cc_rf_scal_14, p_data, level = 1), col = "red")
p_data = subset(data, genotype.id == 10054)
p_data$genotype.id = as.factor(p_data$genotype.id)
plot(p_data$value~p_data$time_since_sowing, type = "p")
fit_val = cc_rf_scal_14$fitted
plot(p_data$time_since_sowing, predict(cc_rf_scal_14, p_data, level = 1), col = "red")
p_data = subset(data, genotype.id == 10180)
p_data$genotype.id = as.factor(p_data$genotype.id)
plot(p_data$value~p_data$time_since_sowing, type = "p")
fit_val = cc_rf_scal_14$fitted
p_data = subset(data, genotype.id == 10179)
p_data$genotype.id = as.factor(p_data$genotype.id)
plot(p_data$value~p_data$time_since_sowing, type = "p")
fit_val = cc_rf_scal_14$fitted
plot(p_data$time_since_sowing, predict(cc_rf_scal_14, p_data, level = 1), col = "red")
plot(p_data$time_since_sowing, predict(cc_rf_scal_14, p_data, level = 0), col = "red")
plot(p_data$time_since_sowing, predict(cc_rf_scal_14, p_data, level = 1), col = "red")
points(p_data$value~p_data$time_since_sowing, type = "p")
p_data = subset(data, genotype.id == 10001)
p_data$genotype.id = as.factor(p_data$genotype.id)
points(p_data$value~p_data$time_since_sowing, type = "p")
fit_val = cc_rf_scal_14$fitted
plot(p_data$time_since_sowing, predict(cc_rf_scal_14, p_data, level = 1), col = "red")
points(p_data$value~p_data$time_since_sowing, type = "p")
load(file = "Asym_scal_14_xmid2_scal2_UAV.RData")
plot(cc_rf_scal_14)
data =read.csv("data/model_data.csv")
p_data = subset(data, genotype.id == 10001)
p_data$genotype.id = as.factor(p_data$genotype.id)
points(p_data$value~p_data$time_since_sowing, type = "p")
fit_val = cc_rf_scal_14$fitted
points(p_data$value~p_data$time_since_sowing, type = "p")
fit_val = cc_rf_scal_14$fitted
plot(p_data$time_since_sowing, predict(cc_rf_scal_14, p_data, level = 1), col = "red")
points(p_data$value~p_data$time_since_sowing, type = "p")
load(file = "Asym_scal_14_xmid2_scal2_FIP.RData")
plot(cc_rf_scal_14)
data =read.csv("data/model_data.csv")
p_data = subset(data, genotype.id == 10001)
p_data$genotype.id = as.factor(p_data$genotype.id)
points(p_data$value~p_data$time_since_sowing, type = "p")
fit_val = cc_rf_scal_14$fitted
plot(p_data$time_since_sowing, predict(cc_rf_scal_14, p_data, level = 1), col = "red")
points(p_data$value~p_data$time_since_sowing, type = "p")
load(file = "Asym_scal_14_xmid2_scal2_2015_2018.RData")
plot(cc_rf_scal_14)
data =read.csv("data/model_data.csv")
p_data = subset(data, genotype.id == 10001)
p_data$genotype.id = as.factor(p_data$genotype.id)
points(p_data$value~p_data$time_since_sowing, type = "p")
fit_val = cc_rf_scal_14$fitted
plot(p_data$time_since_sowing, predict(cc_rf_scal_14, p_data, level = 1), col = "red")
points(p_data$value~p_data$time_since_sowing, type = "p")
load(file = "cc_rf_Asym_scal_14.RData")
plot(cc_rf_scal_14)
data =read.csv("data/model_data.csv")
p_data = subset(data, genotype.id == 10001)
p_data$genotype.id = as.factor(p_data$genotype.id)
points(p_data$value~p_data$time_since_sowing, type = "p")
fit_val = cc_rf_scal_14$fitted
plot(p_data$time_since_sowing, predict(cc_rf_scal_14, p_data, level = 1), col = "red")
load(file = "cc_rf_Asym_scal_14_xmid2_scal_2.RData")
plot(cc_rf_scal_14)
data =read.csv("data/model_data.csv")
p_data = subset(data, genotype.id == 10001)
p_data$genotype.id = as.factor(p_data$genotype.id)
points(p_data$value~p_data$time_since_sowing, type = "p")
fit_val = cc_rf_scal_14$fitted
plot(p_data$time_since_sowing, predict(cc_rf_scal_14, p_data, level = 1), col = "red")
points(p_data$value~p_data$time_since_sowing, type = "p")
load(file = "cc_rf_scal_14.RData")
plot(cc_rf_scal_14)
data =read.csv("data/model_data.csv")
p_data = subset(data, genotype.id == 10001)
p_data$genotype.id = as.factor(p_data$genotype.id)
points(p_data$value~p_data$time_since_sowing, type = "p")
fit_val = cc_rf_scal_14$fitted
plot(p_data$time_since_sowing, predict(cc_rf_scal_14, p_data, level = 1), col = "red")
load(file = "cc_rf_scal_14.RData")
plot(cc_rf_scal_14)
load(file = "Asym_scal_14_xmid2_scal2.RData")
load(file = "Asym_scal_14_xmid2_scal2.RData")
load("Asym_scal_14_xmid2_scal2.RData")
load("Asym_scal_14_xmid2_scal2.RData")
plot(cc_rf_scal_14)
data =read.csv("data/model_data.csv")
p_data = subset(data, genotype.id == 10001)
p_data$genotype.id = as.factor(p_data$genotype.id)
points(p_data$value~p_data$time_since_sowing, type = "p")
fit_val = cc_rf_scal_14$fitted
plot(p_data$time_since_sowing, predict(cc_rf_scal_14, p_data, level = 1), col = "red")
load("final_model_nlme.RData")
View(p_data)
plot(fm6.2Soy.nlme)
fit_val = fm6.2Soy.nlme$fitted
View(p_data)
p_data
p_data = subset(data, genotype.id == 10001)
p_data$genotype.id = as.factor(p_data$genotype.id)
points(p_data$value~p_data$time_since_sowing, type = "p")
fit_val = fm6.2Soy.nlme$fitted
plot(p_data$time_since_sowing, predict(fm6.2Soy.nlme, p_data, level = 1), col = "red")
points(p_data$value~p_data$time_since_sowing, type = "p")
plot(fm6.2Soy.nlme)
p_data = subset(data, genotype.id == 10002)
p_data$genotype.id = as.factor(p_data$genotype.id)
points(p_data$value~p_data$time_since_sowing, type = "p")
fit_val = fm6.2Soy.nlme$fitted
plot(p_data$time_since_sowing, predict(fm6.2Soy.nlme, p_data, level = 1), col = "red")
plot(p_data$time_since_sowing, predict(fm6.2Soy.nlme, p_data, level = 0), col = "red")
plot(fm6.2Soy.nlme)
p_data = subset(data, genotype.id == 10010)
p_data$genotype.id = as.factor(p_data$genotype.id)
points(p_data$value~p_data$time_since_sowing, type = "p")
fit_val = fm6.2Soy.nlme$fitted
plot(p_data$time_since_sowing, predict(fm6.2Soy.nlme, p_data, level = 1), col = "red")
points(p_data$value~p_data$time_since_sowing, type = "p")
p_data = subset(data, genotype.id == 10015)
p_data$genotype.id = as.factor(p_data$genotype.id)
points(p_data$value~p_data$time_since_sowing, type = "p")
fit_val = fm6.2Soy.nlme$fitted
plot(p_data$time_since_sowing, predict(fm6.2Soy.nlme, p_data, level = 1), col = "red")
points(p_data$value~p_data$time_since_sowing, type = "p")
p_data = subset(data, genotype.id == 10054)
p_data$genotype.id = as.factor(p_data$genotype.id)
points(p_data$value~p_data$time_since_sowing, type = "p")
fit_val = fm6.2Soy.nlme$fitted
plot(p_data$time_since_sowing, predict(fm6.2Soy.nlme, p_data, level = 1), col = "red")
points(p_data$value~p_data$time_since_sowing, type = "p")
load("final_model_nlme.RData")
plot(fm6.2Soy.nlme)
data =read.csv("data/model_data.csv")
p_data = subset(data, genotype.id == 10054)
p_data$genotype.id = as.factor(p_data$genotype.id)
points(p_data$value~p_data$time_since_sowing, type = "p")
plot(p_data$time_since_sowing, predict(fm6.2Soy.nlme, p_data, level = 1), col = "red")
points(p_data$value~p_data$time_since_sowing, type = "p")
load("final_model_nlme.RData")
plot(fm6.2Soy.nlme)
data =read.csv("data/model_data.csv")
p_data = subset(data, genotype.id == 10054)
p_data$genotype.id = as.factor(p_data$genotype.id)
fit_val = fm6.2Soy.nlme$fitted
plot(p_data$time_since_sowing, predict(fm6.2Soy.nlme, p_data, level = 0), col = "red")
points(p_data$value~p_data$time_since_sowing, type = "p")
plot(p_data$time_since_sowing, predict(fm6.2Soy.nlme, p_data, level = 1), col = "red")
points(p_data$value~p_data$time_since_sowing, type = "p")
library(nlme)
random.effects(fm6.2Soy.nlme))
random.effects(fm6.2Soy.nlme)
var(random.effects(fm6.2Soy.nlme))
plot(p_data$time_since_sowing, predict(fm6.2Soy.nlme, p_data, level = 0), col = "red")
points(p_data$value~p_data$time_since_sowing, type = "p")
