soybeans$variable
soybeans_melt$variable
soybeans_melt$variable.1
dim(soybeans_melt)
# **Loading packages**
library(stringr)
library(readr)
library(dplyr)
library(useful)
library(pbapply)
library(functional)
library(lubridate)
library(glue)
library(suncalc)
library(ggplot2)
library(np)
library(data.table)
soybeans_FIP_UAV <- fread("data/soybean_pixels_data.csv")
colnames(soybeans_FIP_UAV)[colnames(soybeans_FIP_UAV) == "plot.range"] <- "range"
colnames(soybeans_FIP_UAV)[colnames(soybeans_FIP_UAV) == "plot.row"] <- "row"
# soybeans_FIP_UAV$location = 'Eschikon'
soybeans_FIP_UAV$value <- soybeans_FIP_UAV$value_relative
hist(soybeans_FIP_UAV$value)
## Preparing soybeans data set for modelling
soybeans <- subset(soybeans_FIP_UAV) #, Period=="Growth"
soybeans_FIP_UAV = soybeans[soybeans$variable == 'Canopy_cover',] #Canopy_cover_maxFit
soybeans[,nrow(.SD),by=location] # number of rows for wach location
soybeans = unique(soybeans)
soybeans = soybeans[!is.na(soybeans$value),]
soybeans = soybeans[!is.na(soybeans$genotype.id),]
colnames(soybeans)[colnames(soybeans) == "Date"] <- "date"
unique(soybeans$date)
unique(soybeans$variable)
names(soybeans)
soybeans = unique(soybeans) #fix me
soybeans <- soybeans[,c("Filename","genotype.name","genotype.id","plot.UID","range","row","Time","location","year_site.UID" ,"date","variable","Period","time_since_sowing","date_of_sowing","value")]
soybeans = unique(soybeans) #fix me
soybeans[soybeans$value < 0,]$value = 0
soybeans = soybeans[order(soybeans$variable, soybeans$plot.UID, soybeans$date),]
soybeans$plot_number = strtoi(str_sub(soybeans$plot.UID, -3), 10)
soybeans$date <- as.Date(soybeans$date)
soybeans$year = year(soybeans$date)
class(soybeans$year)
# soybeans$location = 'Eschikon'
# soybeans[str_starts(soybeans$UID, 'D'), 'location'] = 'Delley'
table(soybeans$location)
temp = soybeans[soybeans$year_site.UID=='FPSB006',]$range
soybeans[soybeans$year_site.UID=='FPSB006',]$range = soybeans[soybeans$year_site.UID=='FPSB006',]$row
soybeans[soybeans$year_site.UID=='FPSB006',]$row = temp
max_rows_and_ranges = soybeans %>% group_by(year_site.UID) %>% summarize(max_row = max(row))
soybeans = merge(soybeans, max_rows_and_ranges, all.x = TRUE)
soybeans$row_grouped = floor((soybeans$row - 1)/ 3) + 1
soybeans[soybeans$max_row %% 3 == 1 & soybeans$row == soybeans$max_row,]$row_grouped = soybeans[soybeans$max_row %% 3 == 1 & soybeans$row == soybeans$max_row,]$row_grouped - 1
soybeans <- soybeans %>%
group_by(year_site.UID, range, row_grouped) %>%
mutate(plot_grouped = as.factor(cur_group_id()))
max_grouped_rows_and_ranges = soybeans %>% group_by(year_site.UID) %>% summarize(max_row_grouped = max(row_grouped), max_range = max(range))
soybeans = merge(soybeans, max_grouped_rows_and_ranges, all.x = TRUE)
soybeans$distance_to_border_row_grouped = pmin(soybeans$row_grouped - 1, soybeans$max_row_grouped - soybeans$row_grouped)
soybeans$distance_to_border_range = pmin(soybeans$range - 1, soybeans$max_range - soybeans$range)
soybeans$distance_to_border = pmin(soybeans$distance_to_border_row_grouped, soybeans$distance_to_border_range)
soybeans$is_at_border = as.numeric(soybeans$distance_to_border == 0)
soybeans[,c('is_at_border', 'distance_to_border', 'distance_to_border_row_grouped', 'distance_to_border_range', 'row_grouped', 'range', 'max_row_grouped', 'max_range'),]
soybeans <- soybeans[, !names(soybeans) %in% c('distance_to_border', 'distance_to_border_row_grouped', 'distance_to_border_range', 'max_row_grouped', 'max_range')]
unique(soybeans$variable)
df_PH_counts <- soybeans %>%
group_by(plot_grouped) %>%
summarize(num_unique_year_site_UID = n_distinct(year_site.UID))
unique(df_PH_counts$num_unique_year_site_UID)
colnames(soybeans)[colnames(soybeans) == "value"] <- "CC"
# symbols like / and % create problems later on, they should not be used in variable names
colnames(soybeans) <- gsub("/", "", colnames(soybeans))
colnames(soybeans) <- gsub("%", "", colnames(soybeans))
unique_field_UIDs = sort(unique(soybeans$year_site.UID))
unique_field_UIDs
r_squared = function(response_var, resid_=NULL, model_=NULL) {
if (!is.null(model_)) {
resid_ = residuals(model_)
}
RSS = sum(resid_^2)
TSS = sum((response_var - mean(response_var))^2)
return(1 - (RSS / TSS))
}
df_temp = subset(soybeans)
for (field_UID in unique_field_UIDs) {
df_field = df_temp[df_temp$year_site.UID == field_UID,]
plot_numbers = unique(df_field$plot_number)
for (plot_number in plot_numbers) {
df_plot = df_field[df_field$plot_number == plot_number,]
field_dates = sort(unique(df_field$date))
missing_dates = setdiff(as.character(field_dates), as.character(df_plot$date))
df_plot_max_PH = df_plot[df_plot$date == max(df_plot$date),]
for (missing_date in missing_dates) {
df_plot_max_PH$date = as.Date(missing_date)
df_temp = rbind(df_temp, df_plot_max_PH)
}
}
}
df_temp[df_temp$year_site.UID == 'DSSB001' & df_temp$plot_number == 8,]
df_temp[df_temp$year_site.UID == 'DSSB001' & df_temp$plot_number == 3,]
soybeans = left_join(soybeans, df_temp)
soybeans = soybeans %>% group_by(plot.UID) %>% mutate(CC_spatial = mean(CC_spatial))
soybeans$Date <- soybeans$date
soybeans$date <- NULL
soybeans$Location <- soybeans$location
soybeans$Year <- as.character(soybeans$year)
soybeans <- setDT(soybeans)
soybeans[!duplicated(paste(genotype.id,Year,Location,year_site.UID,plot_number,Date,plot.UID,variable))]
soybeans <- unique(soybeans)
dim(soybeans)
soybeans_melt <- melt.data.table(soybeans, measure.vars = c("CC","CC_spatial"))
soybeans$variable
unique(soybeans$variable)
sowing <- subset(soybeans_melt,variable.1=="CC")[!duplicated(plot.UID),]
soybeans_melt <- melt.data.table(soybeans, measure.vars = c("CC"))
sowing <- subset(soybeans_melt,variable.1=="CC")[!duplicated(plot.UID),]
sowing
soybeans_melt
soybeans_melt$Period
unique(soybeans_melt)
dim(soybeans_melt[soybeans_melt$Period == "Growth",])
soybean_data = read.csv("data/soybean_pixels_data.csv")
# this file joins the weather with the soybean data for modelling
weathter_data = read.csv("data/weather_data_for_modelling.csv")
soybean_data = read.csv("data/soybean_pixels_data.csv")
# This pipeline uses soybean_pixels_data.csv to make a df that can be joined with the weather data
# output is call soybean_data_for_modelling.csv
# packages ---------
library(data.table)
library(stringr)
library(tidyverse)
#load data ---------
soybeans_FIP_UAV <- fread("data/soybean_pixels_data.csv")
# rename variables
colnames(soybeans_FIP_UAV)[colnames(soybeans_FIP_UAV) == "plot.range"] <- "range"
colnames(soybeans_FIP_UAV)[colnames(soybeans_FIP_UAV) == "plot.row"] <- "row"
soybeans_FIP_UAV$value <- soybeans_FIP_UAV$value_relative # this creates an additional column value that has the same entries
colnames(soybeans_FIP_UAV)[colnames(soybeans_FIP_UAV) == "Date"] <- "date"
# restrict to subsets of the data that are needed for the model
soybeans = subset(soybeans_FIP_UAV, Period=="Growth" &  variable == "Canopy_cover")
# clean data
soybeans = unique(soybeans)
soybeans = soybeans[!is.na(soybeans$value),]
soybeans = soybeans[!is.na(soybeans$genotype.id),]
soybeans <- soybeans[,c("Filename","genotype.name","genotype.id","plot.UID","range","row","Time","location","year_site.UID" ,"date","variable","Period","time_since_sowing","date_of_sowing","value")]
soybeans[soybeans$value < 0,]$value = 0 # do not allow negative CC
# order the df
soybeans = soybeans[order(soybeans$variable, soybeans$plot.UID, soybeans$date),]
#transform the plot UIDs into strings of integers
soybeans$plot_number = strtoi(str_sub(soybeans$plot.UID, -3), 10)
# Time since sowing ------
soybeans$date <- as.Date(soybeans$date)
soybeans$year = year(soybeans$date)
# Change wrongly measured fields
temp = soybeans[soybeans$year_site.UID=='FPSB006',]$range
soybeans[soybeans$year_site.UID=='FPSB006',]$range = soybeans[soybeans$year_site.UID=='FPSB006',]$row
soybeans[soybeans$year_site.UID=='FPSB006',]$row = temp
# Spatial grouping -----
max_rows_and_ranges = soybeans %>% group_by(year_site.UID) %>% summarize(max_row = max(row))
soybeans = merge(soybeans, max_rows_and_ranges, all.x = TRUE)
soybeans$row_grouped = floor((soybeans$row - 1)/ 3) + 1
soybeans[soybeans$max_row %% 3 == 1 & soybeans$row == soybeans$max_row,]$row_grouped = soybeans[soybeans$max_row %% 3 == 1 & soybeans$row == soybeans$max_row,]$row_grouped - 1
soybeans <- soybeans %>%
group_by(year_site.UID, range, row_grouped) %>%
mutate(plot_grouped = as.factor(cur_group_id()))
# indicator for closeness to border is omitted
soybeans <- soybeans[, !names(soybeans) %in% c('distance_to_border', 'distance_to_border_row_grouped', 'distance_to_border_range', 'max_row_grouped', 'max_range')]
# we keep the plot_groupded variable, but we might define a new grouping later
# rename variables again -------
colnames(soybeans)[colnames(soybeans) == "value"] <- "CC"
# symbols like / and % create problems later on, they should not be used in variable names
colnames(soybeans) <- gsub("/", "", colnames(soybeans))
colnames(soybeans) <- gsub("%", "", colnames(soybeans))
# filling in missing dates - take from R file of prev. year
df_temp = subset(soybeans)
unique_field_UIDs = sort(unique(soybeans$year_site.UID))
for (field_UID in unique_field_UIDs) {
df_field = df_temp[df_temp$year_site.UID == field_UID,]
plot_numbers = unique(df_field$plot_number)
for (plot_number in plot_numbers) {
df_plot = df_field[df_field$plot_number == plot_number,]
field_dates = sort(unique(df_field$date))
missing_dates = setdiff(as.character(field_dates), as.character(df_plot$date))
df_plot_max_PH = df_plot[df_plot$date == max(df_plot$date),]
for (missing_date in missing_dates) {
df_plot_max_PH$date = as.Date(missing_date)
df_temp = rbind(df_temp, df_plot_max_PH)
}
}
}
soybeans = left_join(soybeans,df_temp )
# renaming
soybeans$Date <- soybeans$date
soybeans$date <- NULL # dropping lower case date column
soybeans$Location <- soybeans$location
soybeans$Year <- as.character(soybeans$year)
soybeans <- setDT(soybeans)
soybeans <- unique(soybeans)
#pivot longer
soybeans_melt = melt.data.table(soybeans, measure.vars = c("CC"))
# considering only the growth period, this pipelines returns the same data points as the data_aggregation_cc file from last year.
# Nut without plotting, spatial_cc and other things unnecessary for the modelling
write.csv(soybeans_melt, "data/soybean_data_for_modelling.csv")
# this file joins the weather with the soybean data for modelling
weathter_data = read.csv("data/weather_data_for_modelling.csv")
soybean_data = read.csv("data/soybean_pixels_data.csv")
# this file joins the weather with the soybean data for modelling
weathter_data = read.csv("data/weather_data_for_modelling.csv")
soybean_data = read.csv("data/soybean_pixels_data.csv")
soybean_data = read.csv("data/soybean_data_for_modelling.csv")
# only keep the necessary subset of the weather data
Weather_data_Melt_cumulative_sub <- subset(weathter_data,as.character(Date)%in%as.character(c(soybean_data$Date,soybean_data$date_of_sowing)))
# only keep the necessary subset of the weather data
Weather_data_sub <- subset(weathter_data,as.character(Date)%in%as.character(c(soybean_data$Date,soybean_data$date_of_sowing)))
WeatherAtSowing <- unique(Weather_data_sub)
WeatherAtSowing
WeatherAtSowing$WeatherValueAtSowing <- WeatherAtSowing$WeatherValue
PhenoWeatherData <- merge.data.table(soybean_data, Weather_data_sub, by=c("Location","Date","Year"), all.x = T, all.y = F, allow.cartesian=TRUE)
PhenoWeatherData <- merge.data.table(PhenoWeatherData, WeatherAtSowing[,c("Location","Date","Year","WeatherVariable","WeatherValueAtSowing")], by.x=c("WeatherVariable","Location","date_of_sowing","Year"), by.y=c("WeatherVariable","Location","Date","Year"), all.x = T, all.y = F, allow.cartesian=TRUE)
PhenoWeatherData <- PhenoWeatherData[!is.na(PhenoWeatherData$WeatherVariable),]
# sowing to measure variables
PhenoWeatherData$Sowing_to_Measure <- PhenoWeatherData$WeatherValue-PhenoWeatherData$WeatherValueAtSowing
PhenoWeatherData <- PhenoWeatherData[order(PhenoWeatherData$Date),]
# calculate new measures : still unclear
PhenoWeatherData <- PhenoWeatherData[,list(Sowing_to_Measure=mean(Sowing_to_Measure, na.rm=T), Measure_7=mean(Measure_7, na.rm=T), Measure_14=mean(Measure_14, na.rm=T), Measure_56=mean(Measure_56, na.rm=T), Measure_28=mean(Measure_28, na.rm=T)), by=.(Filename,genotype.name,genotype.id,Year,Location,year_site.UID,plot_number,plot.UID,plot_grouped_global,range,row,Date,value,variable,variable.1,Period,WeatherVariable,WeatherCalcVar,date_of_sowing)]
# calculate new measures : still unclear
PhenoWeatherData <- PhenoWeatherData[,list(Sowing_to_Measure=mean(Sowing_to_Measure, na.rm=T), Measure_7=mean(Measure_7, na.rm=T), Measure_14=mean(Measure_14, na.rm=T), Measure_56=mean(Measure_56, na.rm=T), Measure_28=mean(Measure_28, na.rm=T)), by=.(Filename,genotype.name,genotype.id,Year,Location,year_site.UID,plot_number,plot.UID,plot_grouped_global,range,row,Date,value,variable,variable.1,Period,WeatherVariable,WeatherCalcVar,date_of_sowing)]
PhenoWeatherData
weathter_data = read.csv("data/weather_data_for_modelling.csv")
soybean_data = read.csv("data/soybean_data_for_modelling.csv")
# only keep the necessary subset of the weather data
Weather_data_sub <- subset(weathter_data,as.character(Date)%in%as.character(c(soybean_data$Date,soybean_data$date_of_sowing)))
# include weather at sowing as varible
WeatherAtSowing <- unique(Weather_data_sub)
WeatherAtSowing$WeatherValueAtSowing <- WeatherAtSowing$WeatherValue
PhenoWeatherData <- merge.data.table(soybean_data, Weather_data_sub, by=c("Location","Date","Year"), all.x = T, all.y = F, allow.cartesian=TRUE)
PhenoWeatherData <- merge.data.table(PhenoWeatherData, WeatherAtSowing[,c("Location","Date","Year","WeatherVariable","WeatherValueAtSowing")], by.x=c("WeatherVariable","Location","date_of_sowing","Year"), by.y=c("WeatherVariable","Location","Date","Year"), all.x = T, all.y = F, allow.cartesian=TRUE)
PhenoWeatherData <- PhenoWeatherData[!is.na(PhenoWeatherData$WeatherVariable),]
# sowing to measure variables
PhenoWeatherData$Sowing_to_Measure <- PhenoWeatherData$WeatherValue-PhenoWeatherData$WeatherValueAtSowing
PhenoWeatherData <- PhenoWeatherData[order(PhenoWeatherData$Date),]
# calculate new measures : still unclear
PhenoWeatherData <- PhenoWeatherData[,list(Sowing_to_Measure=mean(Sowing_to_Measure, na.rm=T), Measure_7=mean(Measure_7, na.rm=T), Measure_14=mean(Measure_14, na.rm=T), Measure_56=mean(Measure_56, na.rm=T), Measure_28=mean(Measure_28, na.rm=T)), by=.(Filename,genotype.name,genotype.id,Year,Location,year_site.UID,plot_number,plot.UID,plot_grouped_global,range,row,Date,value,variable,variable.1,Period,WeatherVariable,WeatherCalcVar,date_of_sowing)]
# calculate new measures : still unclear
PhenoWeatherData <- PhenoWeatherData[,list(Sowing_to_Measure=mean(Sowing_to_Measure, na.rm=T), Measure_7=mean(Measure_7, na.rm=T), Measure_14=mean(Measure_14, na.rm=T), Measure_56=mean(Measure_56, na.rm=T), Measure_28=mean(Measure_28, na.rm=T)), by=.(Filename,genotype.name,genotype.id,Year,Location,year_site.UID,plot_number,plot.UID,plot_grouped_global,range,row,Date,value,variable,variable.1,WeatherVariable,WeatherCalcVar,date_of_sowing)]
names(PhenoWeatherData)
PhenoWeatherData$X.x
# calculate new measures : still unclear
PhenoWeatherData <- PhenoWeatherData[,list(Sowing_to_Measure=mean(Sowing_to_Measure, na.rm=T), Measure_7=mean(Measure_7, na.rm=T), Measure_14=mean(Measure_14, na.rm=T), Measure_56=mean(Measure_56, na.rm=T), Measure_28=mean(Measure_28, na.rm=T)), by=.(Filename,genotype.name,genotype.id,Year,Location,year_site.UID,plot_number,plot.UID,plot_grouped_global,range,row,Date,value,variable,variable.1,WeatherVariable,WeatherCalcVar,date_of_sowing)]
# calculate new measures : still unclear
copy <- data.table(PhenoWeatherData)
PhenoWeatherData <- copy[,list(Sowing_to_Measure=mean(Sowing_to_Measure, na.rm=T), Measure_7=mean(Measure_7, na.rm=T), Measure_14=mean(Measure_14, na.rm=T), Measure_56=mean(Measure_56, na.rm=T), Measure_28=mean(Measure_28, na.rm=T)), by=.(Filename,genotype.name,genotype.id,Year,Location,year_site.UID,plot_number,plot.UID,plot_grouped_global,range,row,Date,value,variable,variable.1,WeatherVariable,WeatherCalcVar,date_of_sowing)]
# calculate new measures : still unclear
PhenoWeatherData <- data.table(PhenoWeatherData)
PhenoWeatherData <- PhenoWeatherData[,list(Sowing_to_Measure=mean(Sowing_to_Measure, na.rm=T), Measure_7=mean(Measure_7, na.rm=T), Measure_14=mean(Measure_14, na.rm=T), Measure_56=mean(Measure_56, na.rm=T), Measure_28=mean(Measure_28, na.rm=T)), by=.(Filename,genotype.name,genotype.id,Year,Location,year_site.UID,plot_number,plot.UID,plot_grouped_global,range,row,Date,value,variable,variable.1,WeatherVariable,WeatherCalcVar,date_of_sowing)]
soybean_data$plot_grouped
PhenoWeatherData <- PhenoWeatherData[,list(Sowing_to_Measure=mean(Sowing_to_Measure, na.rm=T), Measure_7=mean(Measure_7, na.rm=T), Measure_14=mean(Measure_14, na.rm=T), Measure_56=mean(Measure_56, na.rm=T), Measure_28=mean(Measure_28, na.rm=T)), by=.(Filename,genotype.name,genotype.id,Year,Location,year_site.UID,plot_number,plot.UID,range,row,Date,value,variable,variable.1,WeatherVariable,WeatherCalcVar,date_of_sowing)]
PhenoWeatherData$Date[is.na(PhenoWeatherData$Sowing_to_Measure)]
PhenoWeatherData_cast <- dcast.data.table(PhenoWeatherData, Filename+genotype.name+genotype.id+Year+Location+year_site.UID+plot_number+plot.UID+plot_grouped+range+row+Date+value+variable+variable.1+Period+date_of_sowing~WeatherVariable, value.var=c("Sowing_to_Measure","Measure_7","Measure_14","Measure_56","Measure_28")) # ~WeatherVariable+WeatherCalcVar
soybeans_FIP_UAV <- fread("data/soybean_pixels_data.csv")
soybeans_FIP_UAV <- fread("data/soybean_pixels_data.csv")
colnames(soybeans_FIP_UAV)[colnames(soybeans_FIP_UAV) == "plot.range"] <- "range"
colnames(soybeans_FIP_UAV)[colnames(soybeans_FIP_UAV) == "plot.row"] <- "row"
# soybeans_FIP_UAV$location = 'Eschikon'
soybeans_FIP_UAV$value <- soybeans_FIP_UAV$value_relative
hist(soybeans_FIP_UAV$value)
## Preparing soybeans data set for modelling
soybeans <- subset(soybeans_FIP_UAV) #, Period=="Growth"
soybeans_FIP_UAV = soybeans[soybeans$variable == 'Canopy_cover',] #Canopy_cover_maxFit
soybeans[,nrow(.SD),by=location] # number of rows for wach location
soybeans = unique(soybeans)
soybeans = soybeans[!is.na(soybeans$value),]
soybeans = soybeans[!is.na(soybeans$genotype.id),]
colnames(soybeans)[colnames(soybeans) == "Date"] <- "date"
unique(soybeans$date)
unique(soybeans$variable)
names(soybeans)
soybeans = unique(soybeans) #fix me
soybeans <- soybeans[,c("Filename","genotype.name","genotype.id","plot.UID","range","row","Time","location","year_site.UID" ,"date","variable","Period","time_since_sowing","date_of_sowing","value")]
soybeans = unique(soybeans) #fix me
soybeans[soybeans$value < 0,]$value = 0
soybeans = soybeans[order(soybeans$variable, soybeans$plot.UID, soybeans$date),]
soybeans$plot_number = strtoi(str_sub(soybeans$plot.UID, -3), 10)
soybeans$date <- as.Date(soybeans$date)
soybeans$year = year(soybeans$date)
class(soybeans$year)
# soybeans$location = 'Eschikon'
# soybeans[str_starts(soybeans$UID, 'D'), 'location'] = 'Delley'
table(soybeans$location)
temp = soybeans[soybeans$year_site.UID=='FPSB006',]$range
soybeans[soybeans$year_site.UID=='FPSB006',]$range = soybeans[soybeans$year_site.UID=='FPSB006',]$row
soybeans[soybeans$year_site.UID=='FPSB006',]$row = temp
max_rows_and_ranges = soybeans %>% group_by(year_site.UID) %>% summarize(max_row = max(row))
soybeans = merge(soybeans, max_rows_and_ranges, all.x = TRUE)
soybeans$row_grouped = floor((soybeans$row - 1)/ 3) + 1
soybeans[soybeans$max_row %% 3 == 1 & soybeans$row == soybeans$max_row,]$row_grouped = soybeans[soybeans$max_row %% 3 == 1 & soybeans$row == soybeans$max_row,]$row_grouped - 1
soybeans <- soybeans %>%
group_by(year_site.UID, range, row_grouped) %>%
mutate(plot_grouped = as.factor(cur_group_id()))
max_grouped_rows_and_ranges = soybeans %>% group_by(year_site.UID) %>% summarize(max_row_grouped = max(row_grouped), max_range = max(range))
soybeans = merge(soybeans, max_grouped_rows_and_ranges, all.x = TRUE)
soybeans$distance_to_border_row_grouped = pmin(soybeans$row_grouped - 1, soybeans$max_row_grouped - soybeans$row_grouped)
soybeans$distance_to_border_range = pmin(soybeans$range - 1, soybeans$max_range - soybeans$range)
soybeans$distance_to_border = pmin(soybeans$distance_to_border_row_grouped, soybeans$distance_to_border_range)
soybeans$is_at_border = as.numeric(soybeans$distance_to_border == 0)
soybeans[,c('is_at_border', 'distance_to_border', 'distance_to_border_row_grouped', 'distance_to_border_range', 'row_grouped', 'range', 'max_row_grouped', 'max_range'),]
soybeans <- soybeans[, !names(soybeans) %in% c('distance_to_border', 'distance_to_border_row_grouped', 'distance_to_border_range', 'max_row_grouped', 'max_range')]
unique(soybeans$variable)
df_PH_counts <- soybeans %>%
group_by(plot_grouped) %>%
summarize(num_unique_year_site_UID = n_distinct(year_site.UID))
unique(df_PH_counts$num_unique_year_site_UID)
colnames(soybeans)[colnames(soybeans) == "value"] <- "CC"
# symbols like / and % create problems later on, they should not be used in variable names
colnames(soybeans) <- gsub("/", "", colnames(soybeans))
colnames(soybeans) <- gsub("%", "", colnames(soybeans))
unique_field_UIDs = sort(unique(soybeans$year_site.UID))
unique_field_UIDs
r_squared = function(response_var, resid_=NULL, model_=NULL) {
if (!is.null(model_)) {
resid_ = residuals(model_)
}
RSS = sum(resid_^2)
TSS = sum((response_var - mean(response_var))^2)
return(1 - (RSS / TSS))
}
df_temp = subset(soybeans)
for (field_UID in unique_field_UIDs) {
df_field = df_temp[df_temp$year_site.UID == field_UID,]
plot_numbers = unique(df_field$plot_number)
for (plot_number in plot_numbers) {
df_plot = df_field[df_field$plot_number == plot_number,]
field_dates = sort(unique(df_field$date))
missing_dates = setdiff(as.character(field_dates), as.character(df_plot$date))
df_plot_max_PH = df_plot[df_plot$date == max(df_plot$date),]
for (missing_date in missing_dates) {
df_plot_max_PH$date = as.Date(missing_date)
df_temp = rbind(df_temp, df_plot_max_PH)
}
}
}
soybeans = left_join(soybeans, df_temp)
soybeans$`field:spat` = soybeans$CC_spatial
soybeans$Date <- soybeans$date
soybeans$date <- NULL
soybeans$Location <- soybeans$location
soybeans$Year <- as.character(soybeans$year)
soybeans <- setDT(soybeans)
soybeans[!duplicated(paste(genotype.id,Year,Location,year_site.UID,plot_number,Date,plot.UID,variable))]
soybeans <- unique(soybeans)
soybeans_melt <- melt.data.table(soybeans, measure.vars = c("CC","CC_spatial"))
soybeans_melt <- melt.data.table(soybeans, measure.vars = c("CC"))
soybeans_melt
names(soybeans_melt)
weather <- data.table::fread("data/Weather_imputed.csv")
p <- subset(weather,WeatherVariable=="Radiation")
p$value[p$value>800] <- 800 # sqrt(p$value)
p$WeatherVariable <- "RadiationSqrt"
weather <- rbind(weather, p)
p1 <- subset(weather,WeatherVariable=="Temperature")
p1$value <- p1$value*p$value
p1$WeatherVariable <- "PhotoSqrtThermal"
weather <- rbind(weather, p1)
weather[weather$Location == "Lindau",]$Location = "Eschikon"
sum(is.na(weather$value))
weather_na = weather[is.na(weather$value),]
table(weather_na$WeatherVariable)
weather_na_no_WeatherVariable = subset(weather_na, select = -c(WeatherVariable))
dim(unique(weather_na_no_WeatherVariable))
sort(unique(weather_na_no_WeatherVariable$Date))
length(unique(weather_na_no_WeatherVariable$Date))
table(weather_na$Latitude)
weather = weather[!is.na(weather$value),]
sum(is.na(weather$value))
lat_and_long = unique(weather[,c('Latitude', 'Longitude', 'Location')])
weather$Date <- as.Date(weather$DateTime)
weather_Eschikon = weather[weather$Location == "Eschikon",]
weather_Delley = weather[weather$Location == "Delley",]
latitude_Eschikon = lat_and_long[lat_and_long$Location=='Eschikon',]$Latitude
longitude_Eschikon = lat_and_long[lat_and_long$Location=='Eschikon',]$Longitude
latitude_Delley = lat_and_long[lat_and_long$Location=='Delley',]$Latitude
longitude_Delley = lat_and_long[lat_and_long$Location=='Delley',]$Longitude
location_Eschikon = list(lat = latitude_Eschikon, lon = longitude_Eschikon)
location_Delley = list(lat = latitude_Delley, lon = longitude_Delley)
Weather_data_Melt_all <- rbind(weather_Delley, weather_Eschikon)
Weather_data_Melt_all$DayNight <- Weather_data_Melt_all$Daytime
rm(weather_na, weather_na_no_WeatherVariable)
gc()
####### Group data and calculate mean and sd
Weather_data_Melt1 <- subset(Weather_data_Melt_all,WeatherVariable!="Precipitation")[, list(dailymean=mean(value, na.rm = T),dailySD=sd(value, na.rm = T)), by=.(Date, Location, WeatherVariable, Imputed) ]
Weather_data_Melt2 <- subset(Weather_data_Melt_all,WeatherVariable=="Precipitation")[, list(dailymean=sum(value, na.rm = T),dailySD=sd(value, na.rm = T)), by=.(Date, Location, WeatherVariable, Imputed) ]
########
Weather_data_Melt_cumulative <- rbind(Weather_data_Melt1, Weather_data_Melt2)#Weather_data_Melt2_dayNight
Weather_data_Melt_cumulative$dailymean[is.na(Weather_data_Melt_cumulative$dailymean)]
Weather_data_Melt_cumulative$Year <- format(as.Date(Weather_data_Melt_cumulative$Date, format="%Y-%m-%d"),"%Y")
Weather_data_Melt_cumulative[,CumulativeDailyMean:=cumsum(dailymean), by=.(Location, WeatherVariable, Year)]
Weather_data_Melt_cumulative[,cum_value:=cumsum(dailymean), by=.(Location, WeatherVariable, Year)]
Weather_data_Melt_cumulative[,Measure_7:=cum_value - shift(cum_value, fill = first(cum_value),n=7), by=.(Year,WeatherVariable,Location) ]
Weather_data_Melt_cumulative[,Measure_14:=cum_value - shift(cum_value, fill = first(cum_value),n=14), by=.(Year,WeatherVariable,Location)  ]
Weather_data_Melt_cumulative[,Measure_28:=cum_value - shift(cum_value, fill = first(cum_value),n=28), by=.(Year,WeatherVariable,Location)  ]
Weather_data_Melt_cumulative[,Measure_56:=cum_value - shift(cum_value, fill = first(cum_value),n=56), by=.(Year,WeatherVariable,Location)  ]
Weather_data_Melt_cumulative$cum_value <- NULL
Weather_data_Melt_cumulative <- melt.data.table(Weather_data_Melt_cumulative, id.vars=c("WeatherVariable","Location","Date","Year","Measure_7","Measure_14","Measure_28","Measure_56"),measure.vars = c("CumulativeDailyMean"),variable.name = "WeatherCalcVar",value.name="WeatherValue") ##,"SDoverTimeDailyMean"
Weather_data_Melt_cumulative <- Weather_data_Melt_cumulative[!is.na(Weather_data_Melt_cumulative$WeatherValue),]
p <- Weather_data_Melt_cumulative[, list(sum_dailymean=max(WeatherValue, na.rm = T)), by=.(Location,Year, WeatherVariable,WeatherCalcVar) ]
p <- subset(p, !WeatherVariable%in%c("PhotothermalTime_0"))
## add weather vars
Weather_data_Melt_cumulative_sub <- subset(Weather_data_Melt_cumulative,as.character(Date)%in%as.character(c(soybeans_melt$Date,soybeans_melt$date_of_sowing)))
WeatherAtSowing <- unique(Weather_data_Melt_cumulative_sub)
WeatherAtSowing$Date[is.na(WeatherAtSowing$WeatherValue)]
WeatherAtSowing$WeatherValueAtSowing <- WeatherAtSowing$WeatherValue
PhenoWeatherData <- merge.data.table(soybeans_melt, Weather_data_Melt_cumulative_sub, by=c("Location","Date","Year"), all.x = T, all.y = F, allow.cartesian=TRUE)
PhenoWeatherData <- merge.data.table(PhenoWeatherData, WeatherAtSowing[,c("Location","Date","Year","WeatherVariable","WeatherValueAtSowing")], by.x=c("WeatherVariable","Location","date_of_sowing","Year"), by.y=c("WeatherVariable","Location","Date","Year"), all.x = T, all.y = F, allow.cartesian=TRUE)
PhenoWeatherData
PhenoWeatherData$plot_grouped
test = PhenoWeatherData$plot_grouped
unique(PhenoWeatherData$WeatherVariable)
PhenoWeatherData <- PhenoWeatherData[!is.na(PhenoWeatherData$WeatherVariable),]
PhenoWeatherData$Sowing_to_Measure <- PhenoWeatherData$WeatherValue-PhenoWeatherData$WeatherValueAtSowing
PhenoWeatherData <- PhenoWeatherData[order(PhenoWeatherData$Date),]
nrow(p)
PhenoWeatherData <- PhenoWeatherData[,list(Sowing_to_Measure=mean(Sowing_to_Measure, na.rm=T), Measure_7=mean(Measure_7, na.rm=T), Measure_14=mean(Measure_14, na.rm=T), Measure_56=mean(Measure_56, na.rm=T), Measure_28=mean(Measure_28, na.rm=T)), by=.(Filename,genotype.name,genotype.id,Year,Location,year_site.UID,plot_number,plot.UID,plot_grouped_global,range,row,Date,value,variable,variable.1,Period,WeatherVariable,WeatherCalcVar,date_of_sowing)]
#'
#' ### Load data
#'
## -------------------------------------------------------------------------------------------------------------------------------------------------------------------
# df_o <- read.csv("data/aggregated/aggregated_PH_old.csv")
df_o <- read.csv("data/aggregated/aggregated_CC_FIP.csv")
names(PhenoWeatherData)
# this file joins the weather with the soybean data for modelling
weathter_data = read.csv("data/weather_data_for_modelling.csv")
soybean_data = read.csv("data/soybean_data_for_modelling.csv")
# only keep the necessary subset of the weather data
Weather_data_sub <- subset(weathter_data,as.character(Date)%in%as.character(c(soybean_data$Date,soybean_data$date_of_sowing)))
# include weather at sowing as varible
WeatherAtSowing <- unique(Weather_data_sub)
WeatherAtSowing$WeatherValueAtSowing <- WeatherAtSowing$WeatherValue
PhenoWeatherData <- merge.data.table(soybean_data, Weather_data_sub, by=c("Location","Date","Year"), all.x = T, all.y = F, allow.cartesian=TRUE)
PhenoWeatherData <- merge.data.table(PhenoWeatherData, WeatherAtSowing[,c("Location","Date","Year","WeatherVariable","WeatherValueAtSowing")], by.x=c("WeatherVariable","Location","date_of_sowing","Year"), by.y=c("WeatherVariable","Location","Date","Year"), all.x = T, all.y = F, allow.cartesian=TRUE)
PhenoWeatherData <- PhenoWeatherData[!is.na(PhenoWeatherData$WeatherVariable),]
# sowing to measure variables
PhenoWeatherData$Sowing_to_Measure <- PhenoWeatherData$WeatherValue-PhenoWeatherData$WeatherValueAtSowing
PhenoWeatherData <- PhenoWeatherData[order(PhenoWeatherData$Date),]
# calculate new measures : still unclear
PhenoWeatherData <- data.table(PhenoWeatherData)
PhenoWeatherData <- copy[,list(Sowing_to_Measure=mean(Sowing_to_Measure, na.rm=T), Measure_7=mean(Measure_7, na.rm=T), Measure_14=mean(Measure_14, na.rm=T), Measure_56=mean(Measure_56, na.rm=T), Measure_28=mean(Measure_28, na.rm=T)), by=.(Filename,genotype.name,genotype.id,Year,Location,year_site.UID,plot_number,plot.UID,plot_grouped,range,row,Date,value,variable,variable.1,WeatherVariable,WeatherCalcVar,date_of_sowing)]
soybean_data
# sowing to measure variables
PhenoWeatherData$Sowing_to_Measure <- PhenoWeatherData$WeatherValue-PhenoWeatherData$WeatherValueAtSowing
PhenoWeatherData <- PhenoWeatherData[order(PhenoWeatherData$Date),]
names(PhenoWeatherData)
# calculate new measures : still unclear
PhenoWeatherData <- data.table(PhenoWeatherData)
PhenoWeatherData <- copy[,list(Sowing_to_Measure=mean(Sowing_to_Measure, na.rm=T), Measure_7=mean(Measure_7, na.rm=T), Measure_14=mean(Measure_14, na.rm=T), Measure_56=mean(Measure_56, na.rm=T), Measure_28=mean(Measure_28, na.rm=T)), by=.(Filename,genotype.name,genotype.id,Year,Location,year_site.UID,plot_number,plot.UID,plot_grouped,range,row,Date,value,variable,variable.1,WeatherVariable,WeatherCalcVar,date_of_sowing)]
PhenoWeatherData <- PhenoWeatherData[,list(Sowing_to_Measure=mean(Sowing_to_Measure, na.rm=T), Measure_7=mean(Measure_7, na.rm=T), Measure_14=mean(Measure_14, na.rm=T), Measure_56=mean(Measure_56, na.rm=T), Measure_28=mean(Measure_28, na.rm=T)), by=.(Filename,genotype.name,genotype.id,Year,Location,year_site.UID,plot_number,plot.UID,plot_grouped,range,row,Date,value,variable,variable.1,WeatherVariable,WeatherCalcVar,date_of_sowing)]
PhenoWeatherData$Date[is.na(PhenoWeatherData$Sowing_to_Measure)]
PhenoWeatherData_cast <- dcast.data.table(PhenoWeatherData, Filename+genotype.name+genotype.id+Year+Location+year_site.UID+plot_number+plot.UID+plot_grouped+range+row+Date+value+variable+variable.1+Period+date_of_sowing~WeatherVariable, value.var=c("Sowing_to_Measure","Measure_7","Measure_14","Measure_56","Measure_28")) # ~WeatherVariable+WeatherCalcVar
PhenoWeatherData_cast <- dcast.data.table(PhenoWeatherData, Filename+genotype.name+genotype.id+Year+Location+year_site.UID+plot_number+plot.UID+plot_grouped+range+row+Date+value+variable+variable.1+date_of_sowing~WeatherVariable, value.var=c("Sowing_to_Measure","Measure_7","Measure_14","Measure_56","Measure_28")) # ~WeatherVariable+WeatherCalcVar
write.csv(PhenoWeatherData_cast, "data/model_data.csv")
# this file fits the model
# Packages
library(nlme)
library(stringr)
library(ggplot2)
library(dplyr)
library(broom.mixed)
library(merTools)
require(data.table)
library(data.table)
# create new variables
PhenoWeatherData_cast$time_since_sowing =( as.numeric(as.Date(PhenoWeatherData_cast$Date )-as.Date( PhenoWeatherData_cast$date_of_sowing)))
# this file joins the weather with the soybean data for modelling. Creates model_data.csv
weathter_data = read.csv("data/weather_data_for_modelling.csv")
soybean_data = read.csv("data/soybean_data_for_modelling.csv")
# only keep the necessary subset of the weather data
Weather_data_sub <- subset(weathter_data,as.character(Date)%in%as.character(c(soybean_data$Date,soybean_data$date_of_sowing)))
# include weather at sowing as varible
WeatherAtSowing <- unique(Weather_data_sub)
WeatherAtSowing$WeatherValueAtSowing <- WeatherAtSowing$WeatherValue
PhenoWeatherData <- merge.data.table(soybean_data, Weather_data_sub, by=c("Location","Date","Year"), all.x = T, all.y = F, allow.cartesian=TRUE)
PhenoWeatherData <- merge.data.table(PhenoWeatherData, WeatherAtSowing[,c("Location","Date","Year","WeatherVariable","WeatherValueAtSowing")], by.x=c("WeatherVariable","Location","date_of_sowing","Year"), by.y=c("WeatherVariable","Location","Date","Year"), all.x = T, all.y = F, allow.cartesian=TRUE)
PhenoWeatherData <- PhenoWeatherData[!is.na(PhenoWeatherData$WeatherVariable),]
# sowing to measure variables
PhenoWeatherData$Sowing_to_Measure <- PhenoWeatherData$WeatherValue-PhenoWeatherData$WeatherValueAtSowing
PhenoWeatherData <- PhenoWeatherData[order(PhenoWeatherData$Date),]
# calculate new measures : still unclear
PhenoWeatherData <- data.table(PhenoWeatherData)
PhenoWeatherData <- PhenoWeatherData[,list(Sowing_to_Measure=mean(Sowing_to_Measure, na.rm=T), Measure_7=mean(Measure_7, na.rm=T), Measure_14=mean(Measure_14, na.rm=T), Measure_56=mean(Measure_56, na.rm=T), Measure_28=mean(Measure_28, na.rm=T)), by=.(Filename,genotype.name,genotype.id,Year,Location,year_site.UID,plot_number,plot.UID,plot_grouped,range,row,Date,value,variable,variable.1,WeatherVariable,WeatherCalcVar,date_of_sowing)]
PhenoWeatherData_cast <- dcast.data.table(PhenoWeatherData, Filename+genotype.name+genotype.id+Year+Location+year_site.UID+plot_number+plot.UID+plot_grouped+range+row+Date+value+variable+variable.1+date_of_sowing~WeatherVariable, value.var=c("Sowing_to_Measure","Measure_7","Measure_14","Measure_56","Measure_28")) # ~WeatherVariable+WeatherCalcVar
# create new variables
PhenoWeatherData_cast$time_since_sowing =( as.numeric(as.Date(PhenoWeatherData_cast$Date )-as.Date( PhenoWeatherData_cast$date_of_sowing)))
# this file joins the weather with the soybean data for modelling. Creates model_data.csv
weathter_data = read.csv("data/weather_data_for_modelling.csv")
soybean_data = read.csv("data/soybean_data_for_modelling.csv")
# only keep the necessary subset of the weather data
Weather_data_sub <- subset(weathter_data,as.character(Date)%in%as.character(c(soybean_data$Date,soybean_data$date_of_sowing)))
# include weather at sowing as varible
WeatherAtSowing <- unique(Weather_data_sub)
WeatherAtSowing$WeatherValueAtSowing <- WeatherAtSowing$WeatherValue
PhenoWeatherData <- merge.data.table(soybean_data, Weather_data_sub, by=c("Location","Date","Year"), all.x = T, all.y = F, allow.cartesian=TRUE)
PhenoWeatherData <- merge.data.table(PhenoWeatherData, WeatherAtSowing[,c("Location","Date","Year","WeatherVariable","WeatherValueAtSowing")], by.x=c("WeatherVariable","Location","date_of_sowing","Year"), by.y=c("WeatherVariable","Location","Date","Year"), all.x = T, all.y = F, allow.cartesian=TRUE)
PhenoWeatherData <- PhenoWeatherData[!is.na(PhenoWeatherData$WeatherVariable),]
# sowing to measure variables
PhenoWeatherData$Sowing_to_Measure <- PhenoWeatherData$WeatherValue-PhenoWeatherData$WeatherValueAtSowing
PhenoWeatherData <- PhenoWeatherData[order(PhenoWeatherData$Date),]
# calculate new measures : still unclear
PhenoWeatherData <- data.table(PhenoWeatherData)
PhenoWeatherData <- PhenoWeatherData[,list(Sowing_to_Measure=mean(Sowing_to_Measure, na.rm=T), Measure_7=mean(Measure_7, na.rm=T), Measure_14=mean(Measure_14, na.rm=T), Measure_56=mean(Measure_56, na.rm=T), Measure_28=mean(Measure_28, na.rm=T)), by=.(Filename,genotype.name,genotype.id,Year,Location,year_site.UID,plot_number,plot.UID,plot_grouped,range,row,Date,value,variable,variable.1,WeatherVariable,WeatherCalcVar,date_of_sowing)]
PhenoWeatherData_cast <- dcast.data.table(PhenoWeatherData, Filename+genotype.name+genotype.id+Year+Location+year_site.UID+plot_number+plot.UID+plot_grouped+range+row+Date+value+variable+variable.1+date_of_sowing~WeatherVariable, value.var=c("Sowing_to_Measure","Measure_7","Measure_14","Measure_56","Measure_28")) # ~WeatherVariable+WeatherCalcVar
# create new variables
PhenoWeatherData_cast$time_since_sowing =( as.numeric(as.Date(PhenoWeatherData_cast$Date )-as.Date( PhenoWeatherData_cast$date_of_sowing)))
write.csv(PhenoWeatherData_cast, "data/model_data.csv")
